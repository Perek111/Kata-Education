/*Реализуйте метод, сливающий два отсортированных по неубыванию массива чисел в один отсортированный в том же порядке массив. Массивы могут быть любой длины, в том числе нулевой.

Предполагается, что вы реализуете алгоритм слияния, имеющий линейную сложность: он будет идти по двум исходным массивам и сразу формировать отсортированный результирующий массив. Так, чтобы сортировка полученного массива при помощи Arrays.sort() уже не требовалась.

К сожалению, автоматически это не проверить, так что это остается на вашей совести :)

Воспользуйтесь предоставленным шаблоном. Декларацию класса, метод main и обработку ввода-вывода добавит проверяющая система.

Пример ввода: {0, 2, 2} и {1, 3}
Пример вывода: {0, 1, 2, 2, 3}

Требования:
Cигнатура метода должна быть: mergeArrays(int[] a1, int[] a2)*/
package primitiveTypes;

public class Task_2_4_17 {
    public static int[] mergeArrays(int[] a1, int[] a2) {
        int[] result = new int[a1.length + a2.length];
        int j = 0, k = 0;
        for (int i = 0; i < result.length; i++) {
            if (j < a1.length & k < a2.length) {
                if (a1[j] <= a2[k]) {
                    result[i] = a1[j++];
                } else if (a1[j] > a2[k]) {
                    result[i] = a2[k++];
                }
            } else if (k < a2.length) {
                result[i] = a2[k++];
            } else {
                result[i] = a1[j++];
            }
        }
        return result;
    }
}
